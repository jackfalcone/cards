version: "3.9"

networks:
  laravel_environment:

services:
  server:
    # image: 'nginx:stable-alpine'
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - 8080:80
      # - 443:443
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    container_name: laravel_environment_server
    networks:
      - laravel_environment
    # extra_hosts:
    #  - "host.docker.internal:host-gateway"
  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    container_name: php_laravel_environment
    networks:
      - laravel_environment
  mysql:
    image: mysql:8.0.1
    restart: unless-stopped
    tty: true
    container_name: mysql_laravel_environment
    env_file:
      - mysql/.env
    ports:
      - 3306:3306
    networks:
      - laravel_environment
    volumes:
      - ./opt/mysql_data:/var/lib/mysql
  npm:
    image: node:lts-buster
    container_name: laravel_npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    command: ["run", "dev"]
    ports:
      - '5173:5173'
    networks:
      - laravel_environment
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    container_name: phpmyadmin_laravel_environment
    depends_on:
      - mysql
    ports:
      - '8891:80'
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=secret
    networks:
      - laravel_environment
  redis:
    image: redis:alpine
    container_name: redis_laravel_environment
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel_environment
    command: redis-server --appendonly yes --replica-read-only no

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    networks:
      - laravel_environment
  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    #depends_on:
    #- mysql
    networks:
      - laravel_environment
  scheduler:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: scheduler_laravel_environment
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "php", "artisan", "schedule:work" ]
    networks:
      - laravel_environment
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog_laravel_environment
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel_environment